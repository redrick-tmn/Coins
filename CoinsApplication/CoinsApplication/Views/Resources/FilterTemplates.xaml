<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewModel="clr-namespace:CoinsApplication.ViewModel"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls">


    <Style x:Key="SquareToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="controls:ControlsHelper.CornerRadius" Value="0" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Padding" Value="5 6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border x:Name="Background" Background="{TemplateBinding Background}" />
                        <Border x:Name="Border"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.CornerRadius), Mode=OneWay}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border x:Name="DisabledVisualElement"
                                Background="{DynamicResource ControlsDisabledBrush}"
                                Opacity="0"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.CornerRadius), Mode=OneWay}"
                                IsHitTestVisible="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <controls:ContentControlEx x:Name="PART_ContentPresenter"
                                                   Padding="{TemplateBinding Padding}"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Content="{TemplateBinding Content}"
                                                   ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.ContentCharacterCasing)}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   RecognizesAccessKey="True"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource GrayBrush2}" />
                <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}" />
                <Setter Property="BorderThickness" Value="2" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource GrayBrush8}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource GrayBrush3}" />
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource GrayBrush7}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonMouseOverBorderBrush}" />
                <Setter Property="BorderThickness" Value="2" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="FilterButtonContentTemplate">
        <Rectangle Width="16" Height="16" Fill="Black">
            <Rectangle.OpacityMask>
                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_filter}" />
            </Rectangle.OpacityMask>
        </Rectangle>
    </DataTemplate>

    <DataTemplate x:Key="GroupingButtonContentTemplate">
        <Rectangle Width="16" Height="16" Fill="Black">
            <Rectangle.OpacityMask>
                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_diagram}" />
            </Rectangle.OpacityMask>
        </Rectangle>
    </DataTemplate>

    <ControlTemplate x:Key="FilterPopupTemplate" TargetType="ContentControl">
        <StackPanel Orientation="Horizontal">
            <Button x:Name="ShowFilterButton" Margin="1 0 0 0" 
                    Style="{DynamicResource SquareButtonStyle}"
                    ContentTemplate="{StaticResource FilterButtonContentTemplate}"
                    Height="32" Width="32" BorderThickness="0">
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                        Storyboard.Target="{Binding ElementName=FilterPopup}">
                                        <BooleanAnimationUsingKeyFrames.KeyFrames>
                                            <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True"></DiscreteBooleanKeyFrame>
                                        </BooleanAnimationUsingKeyFrames.KeyFrames>
                                    </BooleanAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Button.Triggers>
            </Button>

            <Popup x:Name="FilterPopup" StaysOpen="False" 
                   Placement="Relative" PlacementTarget="{Binding ElementName=ShowFilterButton}"
                   PopupAnimation="Scroll" AllowsTransparency="True">
                <Border BorderBrush="{DynamicResource ControlBorderBrush}" 
                        BorderThickness="1"
                        Background="{DynamicResource WindowBackgroundBrush}">
                    <ContentPresenter/>
                </Border>
            </Popup>
        </StackPanel>
    </ControlTemplate>
    
    <DataTemplate x:Key="TitleHeaderTemplate" DataType="viewModel:FilterViewModel">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="Title" VerticalAlignment="Center"></TextBlock>

            <ContentControl Template="{StaticResource FilterPopupTemplate}">
                <StackPanel Orientation="Horizontal">
                    <TextBox Text="{Binding TitleFilterPattern, UpdateSourceTrigger=PropertyChanged}" Width="200" Margin="2"
                                 controls:TextBoxHelper.ClearTextButton="True"
                                 controls:TextBoxHelper.Watermark="Search text"></TextBox>
                </StackPanel>
            </ContentControl>
        </StackPanel>
    </DataTemplate>
    
    <DataTemplate x:Key="CurrencyHeaderTemplate" DataType="viewModel:FilterViewModel">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="Currency" VerticalAlignment="Center"></TextBlock>
      
            <ContentControl Template="{StaticResource FilterPopupTemplate}">
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0" Margin="1"
                                Style="{DynamicResource AccentedSquareButtonStyle}" 
                                Command="{Binding CheckAllCommand}" 
                                CommandParameter="{Binding Currencies}">Check All</Button>

                        <Button Grid.Column="1" Margin="1"
                                Style="{DynamicResource AccentedSquareButtonStyle}" 
                                Command="{Binding UncheckAllCommand}" 
                                CommandParameter="{Binding Currencies}">Uncheck All</Button>
                    </Grid>
                   <ListBox ItemsSource="{Binding Currencies}" 
                         ScrollViewer.VerticalScrollBarVisibility="Visible"
                         MaxHeight="200"
                         Width="350">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsSelected}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Model.Code}" Margin="1 0 1 0" FontSize="12" FontWeight="Bold"/>
                                        <TextBlock Text="{Binding Model.Name, FallbackValue=Empty}" Margin="1 0 1 0"/>
                                    </StackPanel>
                                </CheckBox>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
            </ContentControl>

            <ToggleButton x:Name="EnableGroupingButton" Margin="1 0 0 0" 
                    Style="{DynamicResource SquareToggleButtonStyle}"
                    ContentTemplate="{StaticResource GroupingButtonContentTemplate}"
                    Command="{Binding SetGroupCommand}"
                    CommandParameter="Currency"
                    Height="32" Width="32" BorderThickness="0">
            </ToggleButton>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="CountryHeaderTemplate" DataType="viewModel:FilterViewModel">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="Country" VerticalAlignment="Center"></TextBlock>

            <ContentControl Template="{StaticResource FilterPopupTemplate}">
                <StackPanel>
                    <Grid> 
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0" Margin="1"
                                Style="{DynamicResource AccentedSquareButtonStyle}" 
                                Command="{Binding CheckAllCommand}" 
                                CommandParameter="{Binding Countries}">Check All</Button>

                        <Button Grid.Column="1" Margin="1"
                                Style="{DynamicResource AccentedSquareButtonStyle}" 
                                Command="{Binding UncheckAllCommand}" 
                                CommandParameter="{Binding Countries}">Uncheck All</Button>
                    </Grid>
 
                    <ListBox ItemsSource="{Binding Countries}"
                         ScrollViewer.VerticalScrollBarVisibility="Visible" 
                         MaxHeight="200"
                         Width="250">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsSelected}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{Binding Model.Flag, Converter={StaticResource CachingImageConverter}}" Height="16" Margin="1 0 1 0"/>
                                        <TextBlock Text="{Binding Model.Name, FallbackValue=Empty}" Margin="1 0 1 0"/>
                                    </StackPanel>
                                </CheckBox>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
            </ContentControl>

            <ToggleButton x:Name="EnableGroupingButton" Margin="1 0 0 0" 
                    Style="{DynamicResource SquareToggleButtonStyle}"
                    ContentTemplate="{StaticResource GroupingButtonContentTemplate}"
                    Command="{Binding SetGroupCommand}"
                    CommandParameter="Country"
                    Height="32" Width="32" BorderThickness="0">
            </ToggleButton>

        </StackPanel>
    </DataTemplate>
    
</ResourceDictionary>